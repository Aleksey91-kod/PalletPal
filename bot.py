import os
import json
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram.fsm.storage.memory import MemoryStorage
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
if not TOKEN:
    raise ValueError("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# URL –≤–∞—à–µ–≥–æ WebApp –Ω–∞ GitHub Pages
WEBAPP_URL = "https://aleksey91-kod.github.io/PalletPal/ModernApp/index.html"

def get_main_menu():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π WebApp"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üöõ –û—Ç–∫—Ä—ã—Ç—å PalletPal",
            web_app=WebAppInfo(url=WEBAPP_URL)
        )]
    ])

@dp.message(Command('start'))
async def start(message: types.Message):
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PalletPal!\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:",
        reply_markup=get_main_menu()
    )

@dp.message(F.web_app_data)
async def handle_web_app_data(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp"""
    try:
        data = json.loads(message.web_app_data.data)
        await message.answer(
            f"üì¶ –ü–æ–ª—É—á–µ–Ω –∑–∞–∫–∞–∑:\n"
            f"–¢–∏–ø –≥—Ä—É–∑–∞: {data.get('item', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"–û—Ç: {data.get('from', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            f"–î–æ: {data.get('to', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}"
        )
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞: {str(e)}")

@dp.message(Command('help'))
async def help_cmd(message: types.Message):
    await message.answer("–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É: /start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã")

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    print(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–∫–µ–Ω: {TOKEN[:10]}...")
    print(f"WebApp URL: {WEBAPP_URL}")
    await dp.start_polling(bot)

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())